server:
    port: 8080

kafka:
    topic: topicDemo

min: 1
max: 9999999

spring:
    kafka:
        bootstrap-servers: localhost:9092
        producer:
            key-serializer: org.apache.kafka.common.serialization.StringSerializer
            value-serializer: org.apache.kafka.common.serialization.StringSerializer
            # ack = all make sure that the message is stored in kafka then producer can receive ack, and will retry if message is lost
            acks: all
            # enable.idempotence = true make sure that kafka only store once when producer send duplicate message
            properties:
                enable.idempotence: true
                max.in.flight.requests.per.connection: 1
            retries: 3

        consumer:
            group-id: testGroup
            key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
            value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
            # enable-auto-commit = false make sure consumer receive and handle the message successfully then commit the message
            enable-auto-commit: false

        listener:
            ack-mode: manual_immediate

